// ==UserScript==
// @name         ICS - Ryan Script
// @namespace    http://tampermonkey.net/
// @version      0.2
// @description  Script de Automação Alexandre Turismo - ICS
// @author       @ryanzera.dev
// @license      www.instagram.com/@ryanzera.dev
// @require      https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.full.min.js
// @match        https://alexandreturismo.auttran.com/*
// @grant        GM_addStyle
// @icon         data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20%20viewBox%3D%220%200%2064%2064%22%3E%3Cdefs%20fill%3D%22%23CB912F%22%20%2F%3E%3Cpath%20%20d%3D%22m32%2C6c-8.84%2C0-16%2C7.16-16%2C16%2C0%2C2.63.58%2C5.16%2C1.69%2C7.38l13.31%2C26.62h2l13.31-26.62c1.11-2.22%2C1.69-4.75%2C1.69-7.38%2C0-8.84-7.16-16-16-16Zm0%2C26c-5.52%2C0-10-4.48-10-10s4.48-10%2C10-10%2C10%2C4.48%2C10%2C10-4.48%2C10-10%2C10Z%22%20fill%3D%22%23CB912F%22%20%2F%3E%3C%2Fsvg%3E
// @downloadURL https://raw.githubusercontent.com/ryanzera-dev/ICS-Auttran/main/C%C3%B3digo
// @updateURL https://raw.githubusercontent.com/ryanzera-dev/ICS-Auttran/main/C%C3%B3digo
// ==/UserScript==

(function() {// Marca D'água
    'use strict';

    // Criando o container para o botão de seta e a caixa de informações
    var container = document.createElement('div');
    container.style.position = 'fixed';
    container.style.bottom = '50vh';
    container.style.right = '0%';
    container.style.zIndex = '9999';
    document.body.appendChild(container);

    // Criando a caixa de informações
    var infoBox = document.createElement('div');
    infoBox.innerHTML = `
        <div style="font-family: Roboto, sans-serif; color: #FFFFFF; text-align: center;">
            <h2 style="margin-bottom: 10px; font-size: 24px; font-weight: 700; color: #FFFFFF; text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5); background: linear-gradient(to right, #464646, #2F2F2F); display: inline-block; padding: 10px 20px; border-radius: 10px; margin: 0 auto; transform: translateY(-50%); line-height: 1.5;">CONTATO</h2>
            <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 576 512'%3E%3Cpath d='M0 96l576 0c0-35.3-28.7-64-64-64H64C28.7 32 0 60.7 0 96zm0 32V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V128H0zM64 405.3c0-29.5 23.9-53.3 53.3-53.3H234.7c29.5 0 53.3 23.9 53.3 53.3c0 5.9-4.8 10.7-10.7 10.7H74.7c-5.9 0-10.7-4.8-10.7-10.7zM176 192a64 64 0 1 1 0 128 64 64 0 1 1 0-128zm176 16c0-8.8 7.2-16 16-16H496c8.8 0 16 7.2 16 16s-7.2 16-16 16H368c-8.8 0-16-7.2-16-16zm0 64c0-8.8 7.2-16 16-16H496c8.8 0 16 7.2 16 16s-7.2 16-16 16H368c-8.8 0-16-7.2-16-16zm0 64c0-8.8 7.2-16 16-16H496c8.8 0 16 7.2 16 16s-7.2 16-16 16H368c-8.8 0-16-7.2-16-16z'/%3E%3C/svg%3E" alt="Ícone" style="width: 20px; height: 20px; margin-bottom: 5px; filter: brightness(0) invert(1); opacity: 0.5; display: block; margin: 0 auto; margin-bottom: 15px;"> <!-- Ícone -->
            <hr style="border: none; border-top: 1px solid rgba(255, 255, 255, 0.2); margin-bottom: 15px;">
            <ul style="list-style-type: none; padding-left: 0; margin-bottom: 10px; margin-top: -10px;">
                <li style="margin-bottom: 5px;"><a href="https://api.whatsapp.com/send?phone=5548984613946" target="_blank" style="text-decoration: none; color: inherit; display: flex; align-items: center; padding: 5px; border-radius: 5px;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone-plus-fill" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.68.68 0 0 0 .178.643l2.457 2.457a.68.68 0 0 0 .644.178l2.189-.547a1.75 1.75 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.6 18.6 0 0 1-7.01-4.42 18.6 18.6 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877zM12.5 1a.5.5 0 0 1 .5.5V3h1.5a.5.5 0 0 1 0 1H13v1.5a.5.5 0 0 1-1 0V4h-1.5a.5.5 0 0 1 0-1H12V1.5a.5.5 0 0 1 .5-.5"/></svg> <span style="margin-left: 10px; font-weight: 400; line-height: 20px; font-size: 12px;">(48) 98461-3946</span></a></li>
                <li style="margin-bottom: 5px;"><a href="mailto:ryanzera.dev@gmail.com" target="_blank" style="text-decoration: none; color: inherit; display: flex; align-items: center; padding: 5px; border-radius: 5px;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-plus-fill" viewBox="0 0 16 16"><path d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414zM0 4.697v7.104l5.803-3.558zM6.761 8.83l-6.57 4.026A2 2 0 0 0 2 14h6.256A4.5 4.5 0 0 1 8 12.5a4.49 4.49 0 0 1 1.606-3.446l-.367-.225L8 9.586zM16 4.697v4.974A4.5 4.5 0 0 0 12.5 8a4.5 4.5 0 0 0-1.965.45l-.338-.207z"/><path d="M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1h-1a.5.5 0 0 0 0 1h1v1a.5.5 0 0 0 1 0v-1h1a.5.5 0 0 0 0-1h-1v-1a.5.5 0 0 0-.5-.5"/></svg><span style="margin-left: 10px; font-weight: 400; line-height: 20px; font-size: 12px;">ryanzera.dev@gmail.com</span></a></li>
                <li style="margin-bottom: 5px;"><a href="https://www.instagram.com/ryanzera.dev/" target="_blank" style="text-decoration: none; color: inherit; display: flex; align-items: center; padding: 5px; border-radius: 5px;"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-threads-fill" viewBox="0 0 16 16"><path d="M6.81 9.204c0-.41.197-1.062 1.727-1.062.469 0 .758.034 1.146.121-.124 1.606-.91 1.818-1.674 1.818-.418 0-1.2-.218-1.2-.877Z"/><path d="M2.59 16h10.82A2.59 2.59 0 0 0 16 13.41V2.59A2.59 2.59 0 0 0 13.41 0H2.59A2.59 2.59 0 0 0 0 2.59v10.82A2.59 2.59 0 0 0 2.59 16M5.866 5.91c.567-.81 1.315-1.126 2.35-1.126.73 0 1.351.246 1.795.711.443.466.696 1.132.754 1.983q.368.154.678.363c.832.559 1.29 1.395 1.29 2.353 0 2.037-1.67 3.806-4.692 3.806-2.595 0-5.291-1.51-5.291-6.004C2.75 3.526 5.361 2 8.033 2c1.234 0 4.129.182 5.217 3.777l-1.02.264c-.842-2.56-2.607-2.968-4.224-2.968-2.675 0-4.187 1.628-4.187 5.093 0 3.107 1.69 4.757 4.222 4.757 2.083 0 3.636-1.082 3.636-2.667 0-1.079-.906-1.595-.953-1.595-.177.925-.651 2.482-2.733 2.482-1.213 0-2.26-.838-2.26-1.936 0-1.568 1.488-2.136 2.663-2.136.44 0 .97.03 1.247.086 0-.478-.404-1.296-1.426-1.296-.911 0-1.16.288-1.45.624l-.024.027c-.202-.135-.875-.601-.875-.601Z"/></svg><span style="margin-left: 10px; font-weight: 400; line-height: 20px; font-size: 12px;">@ryanzera.dev</span></a></li>
            </ul>
        </div>
    `;
    infoBox.style.background = 'linear-gradient(to right, #272727, #2F2F2F)'; // Fundo gradiente
    infoBox.style.padding = '15px 20px'; // Padding superior e inferior reduzido
    infoBox.style.borderRadius = '5px'; // Bordas arredondadas
    infoBox.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2), 0 0 0.4px 0.4px rgba(255, 255, 255, 0.2)'; // Sombra preta e linha branca
    infoBox.style.position = 'fixed';
    infoBox.style.bottom = '40%';
    infoBox.style.right = '1px';
    infoBox.style.transform = 'translateX(100%)'; // Inicialmente, a caixa de informações está fora da tela
    infoBox.style.transition = 'transform 0.7s ease-in-out, opacity 0.7s ease-in-out';
    container.appendChild(infoBox);

    // Criando o botão de seta
var arrowButton = document.createElement('div');
arrowButton.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="#FFFFFF" class="bi bi-caret-left-fill" viewBox="0 0 16 16"><path fill="#2F2F2F" stroke="#FFFFFF" stroke-width="0.3" d="m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z"/></svg>';
arrowButton.style.position = 'fixed';
arrowButton.style.bottom = '100%'; // Posição vertical inicial
arrowButton.style.right = '0px';
arrowButton.style.cursor = 'pointer';
arrowButton.style.transition = 'transform 0.7s ease-in-out, opacity 0.7s ease-in-out';
arrowButton.style.transform = 'translateX(calc(-0px - 0px))'; // Posiciona a seta à esquerda da caixa de texto
arrowButton.style.width = '24px'; // Definindo largura da seta
arrowButton.style.height = '24px'; // Definindo altura da seta
container.appendChild(arrowButton);


    // Variável para armazenar o intervalo da animação da seta
    var animationInterval;

    // Função para abrir ou fechar a caixa de informações ao clicar na seta
    function toggleInfoBox() {
    if (infoBox.style.transform === 'translateX(100%)') {
        infoBox.style.transform = 'translateX(0%)'; // Exibe a caixa de informações movendo para dentro da tela
        infoBox.style.opacity = '1'; // Define a opacidade como totalmente visível
        arrowButton.style.transform = 'translateX(calc(-0% - ' + (infoBox.offsetWidth + 0) + 'px))'; // Move a seta para o início da caixa de texto
        // Interrompe a animação quando a caixa de texto é aberta
        clearInterval(animationInterval);
    } else {
        infoBox.style.transform = 'translateX(100%)'; // Oculta a caixa de informações movendo para fora da tela
        infoBox.style.opacity = '0'; // Define a opacidade como totalmente transparente
        arrowButton.style.transform = 'translateX(calc(-0% - 0px))'; // Move a seta para a posição original
        // Inicia a animação apenas se o mouse não estiver sobre o botão e a caixa de texto estiver fechada
        if (!isMouseOverButton() && !isInfoBoxOpen()) {
            startAnimation();
        }
    }
}

    // Função para calcular e ajustar a posição da seta
    function adjustArrowPosition() {
        var infoBoxHeight = infoBox.offsetHeight;
        var arrowButtonHeight = arrowButton.offsetHeight;
        var topOffset = (infoBoxHeight - arrowButtonHeight) / 2;
        arrowButton.style.top = `calc(50% - ${topOffset}px)`;
    }

    // Verifica se o mouse está sobre o botão de seta
    function isMouseOverButton() {
        var rect = arrowButton.getBoundingClientRect();
        var mouseX = event.clientX;
        var mouseY = event.clientY;
        return (mouseX >= rect.left && mouseX <= rect.right && mouseY >= rect.top && mouseY <= rect.bottom);
    }

    // Verifica se a caixa de informações está aberta
    function isInfoBoxOpen() {
        return infoBox.style.transform === 'translateX(0%)';
    }

    // Adicionando evento de clique na seta
    arrowButton.addEventListener('click', toggleInfoBox);

    // Adicionando hover para o botão de seta
    arrowButton.addEventListener('mouseenter', function() {
        arrowButton.querySelector('svg path').setAttribute('fill', '#656565');
        // Interrompe a animação quando o mouse está sobre o botão
        clearInterval(animationInterval);
    });

    arrowButton.addEventListener('mouseleave', function() {
        arrowButton.querySelector('svg path').setAttribute('fill', '#2F2F2F');
        // Reinicia a animação se a caixa de texto estiver fechada
        if (!isInfoBoxOpen()) {
            startAnimation();
        }
    });

    // Adicionando hover para os botões
    var buttons = infoBox.querySelectorAll('a');
    buttons.forEach(function(button) {
        button.addEventListener('mouseenter', function() {
            button.style.background = '#656565';
            // Interrompe a animação quando o mouse está sobre os botões da caixa de texto
            clearInterval(animationInterval);
        });
        button.addEventListener('mouseleave', function() {
            button.style.background = 'transparent';
            // Reinicia a animação se a caixa de texto estiver fechada
            if (!isInfoBoxOpen()) {
                startAnimation();
            }
        });
    });

    // Ajustando a posição da seta inicialmente
    adjustArrowPosition();

    // Ajustando a posição da seta sempre que a janela for redimensionada
    window.addEventListener('resize', adjustArrowPosition);

    // Função para iniciar a animação da seta
    function startAnimation() {
        animationInterval = setInterval(animateArrow, 3000); // Chama a função animateArrow a cada 3 segundos
    }

    // Função para animar a seta
function animateArrow() {
    // Verifica se a caixa de informações está aberta
    if (!isInfoBoxOpen()) {
        arrowButton.style.transform = 'translateY(-20px)'; // Move a seta mais para cima
        setTimeout(function() {
            arrowButton.style.transform = 'translateY(20px)'; // Move a seta mais para baixo
            setTimeout(function() {
                arrowButton.style.transform = 'translateY(-15px)'; // Move a seta um pouco para cima
                setTimeout(function() {
                    arrowButton.style.transform = 'translateY(15px)'; // Move a seta um pouco para baixo
                    setTimeout(function() {
                        arrowButton.style.transform = 'translateY(0)'; // Retorna a seta à sua posição original
                    }, 200); // 0.2 segundos
                }, 200); // 0.2 segundos
            }, 200); // 0.2 segundos
        }, 200); // 0.2 segundos
    }
}
    // Inicia a animação quando a página é carregada
    startAnimation();
})(); // Marca D'água

(function() { // Icons dos veículos
    'use strict';

    // URL do novo ícone
    let newIconURL = 'https://static.vecteezy.com/system/resources/previews/025/305/936/original/white-sport-car-on-transparent-background-3d-rendering-illustration-free-png.png';
    let originalIconURLs = [];
    let toggleButton = null;
    let checkButtonInterval = null;

    // Função para criar o botão de liga/desliga
    function createToggleButton() {
        let toggleButton = document.createElement('button');
        toggleButton.textContent = 'Ligar';
        toggleButton.style.position = 'fixed';
        toggleButton.style.top = '185px';
        toggleButton.style.right = '-32px'; // Alteração da margem direita para alinhamento
        toggleButton.style.transform = 'translate(-50%, -50%)';
        toggleButton.style.zIndex = '9999';
        toggleButton.style.padding = '5px 30px 5px 10px'; // Adição de padding para espaço entre o texto e o ícone
        toggleButton.style.border = 'none'; // Remoção da borda para uma aparência mais limpa
        toggleButton.style.backgroundColor = '#2c3e50'; // Alteração da cor de fundo para melhor contraste
        toggleButton.style.color = '#ffffff'; // Alteração da cor do texto para melhor contraste
        toggleButton.style.borderRadius = '5px'; // Adição de borda arredondada
        toggleButton.style.width = 'auto'; // Define a largura do botão para 'auto' para que o texto defina o tamanho
        toggleButton.style.minWidth = '90px'; // Definindo a largura mínima para garantir que o botão não mude de tamanho
        toggleButton.style.textAlign = 'center'; // Centralizando o texto no botão
        toggleButton.style.backgroundImage = `url('${newIconURL}')`; // Adicionando o ícone como plano de fundo
        toggleButton.style.backgroundRepeat = 'no-repeat'; // Evita a repetição do ícone
        toggleButton.style.backgroundPosition = 'right center'; // Posiciona o ícone à direita do texto
        toggleButton.style.backgroundSize = '24px auto'; // Tamanho do ícone
        toggleButton.onclick = toggleIcons;
        toggleButton.id = 'toggle-button'; // Adiciona um ID para identificação posterior
        return toggleButton;
    }

    // Função para alternar os ícones
    function toggleIcons() {
        let images = document.querySelectorAll('img');
        let iconsOn = this.textContent === 'Desligar';

        images.forEach(function(img, index) {
            let src = img.getAttribute('src');
            if (src && src.includes('/resources/images/busicons/')) {
                if (iconsOn) {
                    img.src = originalIconURLs[index];
                } else {
                    originalIconURLs[index] = img.src;
                    img.src = newIconURL;
                }
                img.style.width = '40px'; // Ajuste conforme necessário
                img.style.height = '40px'; // Ajuste conforme necessário
            }
        });

        this.textContent = iconsOn ? 'Ligar' : 'Desligar';

        if (iconsOn) {
            let reloadButton = document.getElementById('button-1140-btnIconEl');
            if (reloadButton) {
                reloadButton.click();
            }
        }
    }

    // Função para verificar se o botão 'button-1140-btnIconEl' está visível na tela
    function isButtonVisible() {
        let reloadButton = document.getElementById('button-1140-btnIconEl');
        if (reloadButton) {
            let buttonRect = reloadButton.getBoundingClientRect();
            return (
                buttonRect.top >= 0 &&
                buttonRect.left >= 0 &&
                buttonRect.bottom <= window.innerHeight &&
                buttonRect.right <= window.innerWidth
            );
        }
        return false;
    }

    // Função para verificar a presença do botão de recarregar o mapa e mostrar/ocultar o botão de liga/desliga
    function checkToggleButton() {
        if (isButtonVisible()) {
            if (!toggleButton) {
                toggleButton = createToggleButton();
                document.body.appendChild(toggleButton);
            }
        } else {
            if (toggleButton) {
                toggleButton.remove();
                toggleButton = null;
            }
        }
    }

    // Verifica a presença do botão a cada 200 milissegundos
    checkButtonInterval = setInterval(checkToggleButton, 0);

    // Verifica a visibilidade da aba e pausa a verificação do botão quando a aba estiver inativa
    document.addEventListener('visibilitychange', function() {
        if (document.visibilityState === 'hidden') {
            clearInterval(checkButtonInterval);
        } else {
            // Reinicia a verificação do botão quando a aba se torna visível novamente
            checkButtonInterval = setInterval(checkToggleButton, 0);
        }
    });

})(); // Icons dos veículos

(function () { // Código Principal - ICS
  'use strict';

  var buttonsContainer;

  GM_addStyle(`
  .consolidated-button {
    position: fixed;
    bottom: calc(1% + env(safe-area-inset-bottom));
    right: 1%;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    border: none;
    background-color: #2F2F2F; /* Cor de fundo */
    color: #ffffff; /* Cor do texto */
    width: 40px;
    height: 24px;
    font-size: 18px;
    cursor: pointer;
    transition: background-color 0.1s; /* Inicia a transição mais rapidamente */
    z-index: 9999;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 0 0.4px 0.4px rgba(255, 255, 255, 0.2); /* Sombra preta e linha branca */
}

  .consolidated-button:hover {
    background-color: #656565; /* Cor de fundo mais escura no hover */
  }

  .consolidated-button:active {
    filter: brightness(0.8);
    box-shadow: 0 0 20px rgba(74, 102, 164, 0.5);
    transform: scale(0.95) translateY(2px);
    animation: none;
  }

  .consolidated-button::before {
    content: url("data:image/svg+xml;utf8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2216%22 height=%2216%22 fill=%22currentColor%22 class=%22bi bi-bing%22 viewBox=%220 0 16 16%22%3E%3Cpath d=%22M8.35 5.046a.615.615 0 0 0-.54.575c-.009.13-.006.14.289.899.67 1.727.833 2.142.86 2.2q.101.215.277.395c.089.092.148.141.247.208.176.117.262.15.944.351.664.197 1.026.327 1.338.482.405.201.688.43.866.7.128.195.242.544.291.896.02.137.02.44 0 .564-.041.27-.124.495-.252.684-.067.1-.044.084.055-.039.278-.346.562-.938.707-1.475a4.42 4.42 0 0 0-2.14-5.028 70 70 0 0 0-.888-.465l-.53-.277-.353-.184c-.16-.082-.266-.138-.345-.18-.368-.192-.523-.27-.568-.283a1 1 0 0 0-.194-.03z%22/%3E%3Cpath d=%22M9.152 11.493a3 3 0 0 0-.135.083 320 320 0 0 0-1.513.934l-.8.496c-.012.01-.587.367-.876.543a1.9 1.9 0 0 1-.732.257c-.12.017-.349.017-.47 0a1.9 1.9 0 0 1-.884-.358 2.5 2.5 0 0 1-.365-.364 1.9 1.9 0 0 1-.34-.76 1 1 0 0 0-.027-.121c-.005-.006.004.092.022.22.018.132.057.324.098.489a4.1 4.1 0 0 0 2.487 2.796c.359.142.72.23 1.114.275.147.016.566.023.72.011a4.1 4.1 0 0 0 1.956-.661l.235-.149.394-.248.258-.163 1.164-.736c.51-.32.663-.433.9-.665.099-.097.248-.262.255-.283.002-.005.028-.046.059-.091a1.64 1.64 0 0 0 .25-.682c.02-.124.02-.427 0-.565a3 3 0 0 0-.213-.758c-.15-.314-.47-.6-.928-.83a2 2 0 0 0-.273-.12c-.006 0-.433.26-.948.58l-1.113.687z%22/%3E%3Cpath d=%22m3.004 12.184.03.129c.089.402.245.693.515.963a1.82 1.82 0 0 0 1.312.543c.361 0 .673-.09.994-.287l.472-.29.373-.23V5.334c0-1.537-.003-2.45-.008-2.521a1.82 1.82 0 0 0-.535-1.177c-.097-.096-.18-.16-.427-.33L4.183.24c-.239-.163-.258-.175-.33-.2a.63.63 0 0 0-.842.464c-.009.042-.01.603-.01 3.646l.003 8.035Z%22/%3E%3C/svg%3E");content: url("data:image/svg+xml;utf8,%3Csvg xmlns=%22http://www.w3.org/2000/svg%22 width=%2216%22 height=%2216%22 fill=%22%23ffffff%22 class=%22bi bi-bing%22 viewBox=%220 0 16 16%22%3E%3Cpath d=%22M8.35 5.046a.615.615 0 0 0-.54.575c-.009.13-.006.14.289.899.67 1.727.833 2.142.86 2.2q.101.215.277.395c.089.092.148.141.247.208.176.117.262.15.944.351.664.197 1.026.327 1.338.482.405.201.688.43.866.7.128.195.242.544.291.896.02.137.02.44 0 .564-.041.27-.124.495-.252.684-.067.1-.044.084.055-.039.278-.346.562-.938.707-1.475a4.42 4.42 0 0 0-2.14-5.028 70 70 0 0 0-.888-.465l-.53-.277-.353-.184c-.16-.082-.266-.138-.345-.18-.368-.192-.523-.27-.568-.283a1 1 0 0 0-.194-.03z%22/%3E%3Cpath d=%22M9.152 11.493a3 3 0 0 0-.135.083 320 320 0 0 0-1.513.934l-.8.496c-.012.01-.587.367-.876.543a1.9 1.9 0 0 1-.732.257c-.12.017-.349.017-.47 0a1.9 1.9 0 0 1-.884-.358 2.5 2.5 0 0 1-.365-.364 1.9 1.9 0 0 1-.34-.76 1 1 0 0 0-.027-.121c-.005-.006.004.092.022.22.018.132.057.324.098.489a4.1 4.1 0 0 0 2.487 2.796c.359.142.72.23 1.114.275.147.016.566.023.72.011a4.1 4.1 0 0 0 1.956-.661l.235-.149.394-.248.258-.163 1.164-.736c.51-.32.663-.433.9-.665.099-.097.248-.262.255-.283.002-.005.028-.046.059-.091a1.64 1.64 0 0 0 .25-.682c.02-.124.02-.427 0-.565a3 3 0 0 0-.213-.758c-.15-.314-.47-.6-.928-.83a2 2 0 0 0-.273-.12c-.006 0-.433.26-.948.58l-1.113.687z%22/%3E%3Cpath d=%22m3.004 12.184.03.129c.089.402.245.693.515.963a1.82 1.82 0 0 0 1.312.543c.361 0 .673-.09.994-.287l.472-.29.373-.23V5.334c0-1.537-.003-2.45-.008-2.521a1.82 1.82 0 0 0-.535-1.177c-.097-.096-.18-.16-.427-.33L4.183.24c-.239-.163-.258-.175-.33-.2a.63.63 0 0 0-.842.464c-.009.042-.01.603-.01 3.646l.003 8.035Z%22/%3E%3C/svg%3E");
    display: block;
    width: 20px;
    height: 20px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

  .script-buttons {
    display: none;
    position: fixed;
    bottom: 5%;
    right: 1%; /* Mesmo valor que o botão principal */
    z-index: 9999;
    opacity: 0;
    transform: translateY(10px) scale(0.8);
    transition: opacity 0.3s, transform 0.3s;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3), 0 0 0.4px 0.4px rgba(255, 255, 255, 0.2); /* Sombra preta e linha branca */
    background-color: #2F2F2F; /* Cor do painel de fundo */
    border-radius: 5px; /* Borda do painel com raio de 5px */
    padding: 2px; /* Espaçamento interno do painel */
}

.script-buttons button {
    display: block;
    color: #e9e9e9; /* Cor do texto */
    background-color: #2F2F2F; /* Cor de fundo igual à cor do painel */
    border: none;
    padding: 10px; /* Espaçamento interno dos botões */
    margin: 2px; /* Distância entre os botões e o painel */
    border-radius: 5px; /* Cantos dos botões com raio de 5px */
    cursor: pointer;
    transition: background-color 0.3s, transform 0.2s, opacity 0.3s, box-shadow 0.3s, color 0.3s; /* Adicionando transição para a cor */
    width: calc(100% - 4px); /* Largura dos botões ajustada */
    font-family: "Exo", sans-serif; /* Escolhendo a versão em negrito da fonte Ubuntu */
    font-weight: 500; /* Ajustando a espessura da fonte */
    text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
    backface-visibility: hidden;
    font-size: 14px; /* Tamanho da fonte dos botões aumentado */
    text-align: left; /* Alinhamento do texto à esquerda */
}

.script-buttons.opened button:hover {
    background-color: #656565; /* Cor de fundo mais clara no hover */
    transition: background-color 0.1s; /* Inicia a transição mais rapidamente */
}

.script-buttons button:hover {
    background-color: #656565; /* Cor de fundo mais clara no hover */
    transform: none;
    color: #FFFFFF; /* Cor do texto no hover */
    box-shadow: none; /* Removendo a sombra no hover */
    transition: background-color 0.1s; /* Inicia a transição mais rapidamente */
}
`);

  var mainButton = document.createElement('button');
  mainButton.innerHTML = '';
  mainButton.className = 'consolidated-button';

  document.body.appendChild(mainButton);

  mainButton.addEventListener('click', function () {
    if (buttonsContainer) {
      if (mainButton.classList.contains('rotate-left')) {
        mainButton.classList.add('rotate-right');
        buttonsContainer.style.opacity = 0;
        buttonsContainer.style.transform = 'translateY(10px) scale(0.8)';
        setTimeout(function () {
          buttonsContainer.style.display = 'none';
          mainButton.classList.remove('rotate-left', 'rotate-right');
        }, 300);
        return;
      }
    }

    buttonsContainer = document.createElement('div');
    buttonsContainer.className = 'script-buttons';

    var buttonBackground = document.createElement('div');
    buttonBackground.className = 'button-background';

    var scriptButtons = [
      { name: USERINFO.name, script: fazerLogin, icon: 'https://icons.getbootstrap.com/assets/icons/person-lines-fill.svg' },
      { name: 'Abrir Rotas', script: abrirRotas, icon: 'https://icons.getbootstrap.com/assets/icons/aspect-ratio-fill.svg' },
      { name: 'Fechar Rotas', script: fecharRotas, icon: 'https://icons.getbootstrap.com/assets/icons/aspect-ratio.svg' },
      { name: 'Filtros', script: aplicarFiltros, icon: 'https://icons.getbootstrap.com/assets/icons/funnel-fill.svg' },
      { name: 'Notificações', script: limparNotificacoes, icon: 'https://icons.getbootstrap.com/assets/icons/bell-fill.svg' },
      { name: 'Trocar', script: realizarTroca, icon: 'https://icons.getbootstrap.com/assets/icons/toggle-on.svg' },
      { name: 'Importar', script: importarescala, icon: 'https://icons.getbootstrap.com/assets/icons/cloud-arrow-down-fill.svg' },
    ];

    scriptButtons.forEach(function (btn) {
      var scriptButton = document.createElement('button');
      var buttonText = document.createElement('span');
      var buttonIcon = document.createElement('img');

      buttonText.innerHTML = btn.name;
      buttonIcon.src = btn.icon;
      buttonIcon.style.width = '16px'; // Defina a largura do ícone
      buttonIcon.style.height = '16px'; // Defina a altura do ícone
      buttonIcon.style.marginRight = '7px'; // Margem direita entre o ícone e o texto do botão
      buttonIcon.style.filter = 'invert(1)'; // Transforma o ícone em branco

      // Aplicar layout de flexbox ao botão e alinhar itens verticalmente
      scriptButton.style.display = 'flex';
      scriptButton.style.alignItems = 'center';

      scriptButton.appendChild(buttonIcon);
      scriptButton.appendChild(buttonText);

      scriptButton.addEventListener('click', function () {
        buttonsContainer.style.opacity = 0;
        buttonsContainer.style.transform = 'translateY(10px) scale(0.8)';
        setTimeout(function () {
          buttonsContainer.style.display = 'none';
          buttonsContainer.classList.remove('opened');
          mainButton.classList.remove('rotate-left', 'rotate-right');
        }, 300);
        btn.script(); // Chama a função associada ao botão
      });

      buttonBackground.appendChild(scriptButton);
    });

    buttonsContainer.appendChild(buttonBackground);
    document.body.appendChild(buttonsContainer);
    buttonsContainer.style.display = 'block';
    mainButton.classList.add('rotate-left');
    setTimeout(function () {
      buttonsContainer.classList.add('opened');
      buttonsContainer.style.opacity = 1;
      buttonsContainer.style.transform = 'translateY(0) scale(1)';
    }, 50);
  });

  document.addEventListener('click', function (event) {
    if (
      buttonsContainer &&
      !buttonsContainer.contains(event.target) &&
      !mainButton.contains(event.target)
    ) {
      if (mainButton.classList.contains('rotate-left')) {
        mainButton.classList.add('rotate-right');
        buttonsContainer.style.opacity = 0;
        buttonsContainer.style.transform = 'translateY(10px) scale(0.8)';
        setTimeout(function () {
          buttonsContainer.style.display = 'none';
          buttonsContainer.classList.remove('opened');
          mainButton.classList.remove('rotate-left', 'rotate-right');
        }, 300);
      }
    }
  });

  function fazerLogin() {
      (function () {
    'use strict';

    // Obtenha o nome do objeto USERINFO
    var nome = USERINFO.name || 'Usuário';

    function mostrarMensagemPersonalizada() {
        var mensagem = document.createElement('div');
        mensagem.id = 'mensagem-personalizada';

        // Converta a primeira letra para maiúsculo
        var nomeComPrimeiraLetraMaiuscula = nome.charAt(0).toUpperCase() + nome.slice(1);

        var mensagemTexto = 'Seja bem-vindo! Você está logado com o usuário <span style="color: #FFFFFF;"><strong><span style="background-color: #808080; padding: 3px; border-radius: 5px;">' + nomeComPrimeiraLetraMaiuscula + '</span></strong></span>, e está utilizando a automação de Ryan!';
        mensagem.innerHTML = mensagemTexto;

        mensagem.style.position = 'fixed';
        mensagem.style.top = '50%';
        mensagem.style.left = '50%';
        mensagem.style.transform = 'translate(-50%, -50%)';
        mensagem.style.background = '#2F2F2F';
        mensagem.style.color = '#FFFFFF';
        mensagem.style.padding = '20px';
        mensagem.style.borderRadius = '5px';
        mensagem.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
        mensagem.style.zIndex = '99999';
        mensagem.style.opacity = '0';
        mensagem.style.transition = 'opacity 0.5s ease-in-out';

        document.body.appendChild(mensagem);

        // Efeito de fade-in
        setTimeout(function () {
            mensagem.style.opacity = '1';
        }, 100);

        // Efeito de fade-out após 3 segundos
        setTimeout(function () {
            mensagem.style.opacity = '0';
        }, 3000);

        // Remover a mensagem após o fade-out
        setTimeout(function () {
            mensagem.remove();
        }, 3500);
    }

    mostrarMensagemPersonalizada();
})();

    // Coloque aqui o código para o botão "Login"
    // Exemplo: console.log("Clicou em Login");
  }

  function abrirRotas() {
      (function () {
    'use strict';

    var automacaoAtiva = false;
    var timeoutIDs = [];
    var botaoParar; // Referência para o botão "Parar"
    var dashboard; // Referência para o dashboard
    var contadorRotas = 0;
    var rotasIgnoradas = 0;
    var totalRotas = 0;

    function reiniciarContagem() {
        contadorRotas = 0;
        rotasIgnoradas = 0;
        totalRotas = 0;
    }

    function iniciarAutomacao() {
        if (automacaoAtiva) return; // Evita iniciar a automação múltiplas vezes
        automacaoAtiva = true;
        reiniciarContagem(); // Reinicia as variáveis de contagem
        var rotas = document.querySelectorAll('.x-grid-item.x-grid-item-selected');
        totalRotas = rotas.length;

        // Desativar clique nas rotas enquanto a automação estiver ativa
        desativarCliqueRotas();

        // Criar ou reiniciar o dashboard
        criarOuReiniciarDashboard();

        rotas.forEach(function (rota, index) {
            var botao = rota.querySelector('.x-action-col-icon.x-action-col-0');
            var iconeRealizado = rota.querySelector('.fa.icon-circle');

            // Adicionar efeito de flash vermelho ao encontrar uma rota não realizada
            var timeoutID;
            if (!iconeRealizado) {
                timeoutID = setTimeout(function () {
                    piscarDashboard('#ff0000');
                }, (index + 1) * 1000);
                timeoutIDs.push(timeoutID);
            }

            // Verificar se a rota foi realizada com base na presença do ícone
            if (iconeRealizado) {
                if (botao) {
                    timeoutID = setTimeout(function () {
                        botao.click();
                        contadorRotas++;
                        atualizarDashboard();
                        marcarRota(rota, '#00ff00'); // Marcar rota como realizada (verde)
                    }, (index + 2) * 1000);
                    timeoutIDs.push(timeoutID);
                }
            } else {
                rotasIgnoradas++;
                marcarRota(rota, '#ff0000'); // Marcar rota como ignorada (vermelha)
                console.log('Rota não realizada - Ignorada:', rota); // Logar rotas não realizadas
            }
        });

        // Criar o botão "Parar" no canto inferior direito com uma margem de 10 pixels
        botaoParar = criarBotao('Parar', 'fixed', '1%', '4%', 'auto', pararAutomacao);
        document.body.appendChild(botaoParar);
    }

    function criarOuReiniciarDashboard() {
        // Se o dashboard já existir, remova-o
        if (dashboard) {
            fecharDashboard();
        }

        // Criar o dashboard
        dashboard = criarDashboard();
    }

    function criarBotao(texto, position, bottom, right, margin, clickHandler) {
    var botao = document.createElement('button');
    botao.innerHTML = texto;
    botao.style.position = position || 'fixed';
    botao.style.bottom = '1%';
    botao.style.right = right || '4%';
    botao.style.backgroundColor = automacaoAtiva ? '#2F2F2F' : '#2C4373'; // Cor de fundo do botão principal
    botao.style.color = '#FFFFFF'; // Cor do texto
    botao.style.border = 'none';
    botao.style.padding = '5px'; // Diminui o preenchimento para diminuir o tamanho do botão
    botao.style.borderRadius = '5px';
    botao.style.cursor = 'pointer';
    botao.style.zIndex = '9999';
    botao.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2), 0 0 0.4px 0.4px rgba(255, 255, 255, 0.2)'; // Sombra preta e linha branca
    botao.style.width = 'fit-content'; // Ajuste para acomodar o tamanho do texto
    botao.style.margin = margin || '0'; // Adicionando margem conforme necessário
    botao.addEventListener('click', clickHandler);
    return botao;
}


    function criarDashboard() {
    var dashboard = document.createElement('div');
    dashboard.id = 'dashboardContainer';
    dashboard.style.position = 'fixed';
    dashboard.style.bottom = '1%'; // Posiciona no canto inferior
    dashboard.style.left = '50%'; // Posiciona no centro horizontal
    dashboard.style.backgroundColor = '#2F2F2F'; // Cor de fundo cinza escuro
    dashboard.style.color = '#ffffff';
    dashboard.style.border = '1px solid rgba(255, 255, 255, 0.2)'; // Borda branca fina com opacidade
    dashboard.style.borderRadius = '5px';
    dashboard.style.padding = '9px';
    dashboard.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.3)';
    dashboard.style.zIndex = '9999';
    dashboard.style.fontFamily = 'Arial, sans-serif';
    dashboard.style.display = 'flex'; // Torna o container um flex container
    dashboard.style.width = 'fit-content'; // Ajuste para ter a mesma largura do conteúdo
    dashboard.style.transition = 'background-color 0.5s'; // Adiciona transição de cor

    // Adiciona transformação para posicionar no centro horizontal
    dashboard.style.transform = 'translateX(-50%)';

    document.body.appendChild(dashboard);

        // Adiciona a contagem inicial
        var contadorElemento = document.createElement('div');
        contadorElemento.id = 'dashboardContador';
        contadorElemento.style.fontSize = '20px'; // Reduz o tamanho da fonte
        contadorElemento.style.fontWeight = 'bold';
        contadorElemento.style.marginRight = '10px'; // Espaçamento entre os elementos
        contadorElemento.textContent = '0';
        dashboard.appendChild(contadorElemento);

        // Adiciona o texto de total
        var totalElemento = document.createElement('div');
        totalElemento.id = 'dashboardTotal';
        totalElemento.style.fontSize = '14px'; // Reduz o tamanho da fonte
        totalElemento.style.opacity = '0.7';
        totalElemento.textContent = `/ ${totalRotas} Rotas`;
        dashboard.appendChild(totalElemento);

        document.body.appendChild(dashboard);

        // Adiciona animação de fade-in
        setTimeout(function () {
            dashboard.style.opacity = '1'; // Torna o dashboard visível
        }, 100);

        return dashboard;
    }

    function atualizarDashboard() {
        var contadorElemento = document.getElementById('dashboardContador');
        contadorElemento.textContent = contadorRotas;

        var totalElemento = document.getElementById('dashboardTotal');
        totalElemento.textContent = `/ ${totalRotas} Rotas`;
    }

    function fecharDashboard() {
        if (dashboard) {
            dashboard.style.opacity = '0'; // Torna o dashboard invisível
            setTimeout(function () {
                dashboard.remove(); // Use remove() para garantir a remoção do elemento
                dashboard = null; // Limpar a referência
            }, 500); // Aguarda 500ms antes de remover o dashboard
        }
    }

    function piscarDashboard(cor) {
        // Adiciona animação de flash no dashboard
        dashboard.style.backgroundColor = cor;

        // Remove a cor após o flash
        setTimeout(function () {
            dashboard.style.backgroundColor = '#2F2F2F'; // Cor de fundo cinza escuro
        }, 200);
    }

    function pararAutomacao() {
        automacaoAtiva = false;
        timeoutIDs.forEach(clearTimeout);
        timeoutIDs = [];
        redefinirMarcacoes(); // Chama a função para redefinir as marcações
        ativarCliqueRotas(); // Ativa o clique nas rotas após a automação ser parada
        fecharDashboard();
        if (botaoParar) {
            document.body.removeChild(botaoParar); // Remover o botão "Parar"
            botaoParar = null; // Limpar a referência
        }
    }

    function toggleAutomacao() {
        if (automacaoAtiva) {
            pararAutomacao();
        } else {
            setTimeout(iniciarAutomacao, 300);
        }
    }

    function marcarRota(rota, cor) {
        // Adiciona um estilo à rota para destacá-la
        rota.style.transition = 'background-color 0.5s';
        rota.style.backgroundColor = cor;

        // Remove a transição após a automação ser parada
        if (!automacaoAtiva) {
            rota.style.transition = 'none';
        }
    }

    function redefinirMarcacoes() {
        var rotas = document.querySelectorAll('.x-grid-item.x-grid-item-selected');
        rotas.forEach(function (rota) {
            rota.style.backgroundColor = ''; // Remover marcação de cor de fundo
        });

        var dashboardContador = document.getElementById('dashboardContador');
        if (dashboardContador) {
            dashboardContador.textContent = '0';
        }

        var dashboardTotal = document.getElementById('dashboardTotal');
        if (dashboardTotal) {
            dashboardTotal.textContent = `/ ${totalRotas} Rotas`;
        }
    }

    function desativarCliqueRotas() {
        var rotas = document.querySelectorAll('.x-grid-item.x-grid-item-selected');
        rotas.forEach(function (rota) {
            rota.style.pointerEvents = 'none';
        });
    }

    function ativarCliqueRotas() {
        var rotas = document.querySelectorAll('.x-grid-item.x-grid-item-selected');
        rotas.forEach(function (rota) {
            rota.style.pointerEvents = 'auto';
        });
    }

    // Iniciar a automação automaticamente ao carregar a página
    iniciarAutomacao();

})();
    // Coloque aqui o código para o botão "Abrir Rotas"
    // Exemplo: console.log("Clicou em Abrir Rotas");
  }

  function fecharRotas() {
      (function () {
    'use strict';

    var botaoExcluirID = 'tool-1026-toolEl'; // ID do botão a ser excluído

    function fecharTodasRotas() {
        mostrarTelaCarregamento();

        var botoesFechar = document.querySelectorAll('.x-tool-close');
        if (botoesFechar) {
            var botoesParaFechar = Array.from(botoesFechar).filter(function (botao) {
                return botao.id !== botaoExcluirID;
            });

            fecharEmSequencia(botoesParaFechar, function () {
                esconderTelaCarregamento();
                mostrarMensagemConcluida();
            });
        }
    }

    function fecharEmSequencia(botoes, callback, index = 0) {
        if (index < botoes.length) {
            setTimeout(function () {
                botoes[index].click();
                fecharEmSequencia(botoes, callback, index + 1);
            }, 40); // Intervalo de 0,5 segundo entre fechamentos (ajuste conforme necessário)
        } else {
            callback();
        }
    }

    function mostrarTelaCarregamento() {
        // Criar a tela de carregamento
        var overlay = document.createElement('div');
        overlay.id = 'carregamento-overlay';
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.background = 'rgba(0, 0, 0, 0.5)'; // Fundo mais escuro
        overlay.style.display = 'flex';
        overlay.style.alignItems = 'center';
        overlay.style.justifyContent = 'center';
        overlay.style.zIndex = '99999'; // Ajuste o z-index para garantir que fique acima de tudo

        // Adicionar o novo spinner à tela de carregamento (spinner icon) com sombra sutil
        var spinner = document.createElement('i');
        spinner.className = 'fas fa-spinner fa-spin';
        spinner.style.fontSize = '40px';
        spinner.style.color = '#fff'; // Cor do spinner
        spinner.style.textShadow = '1px 1px 5px rgba(0, 0, 0, 0.3)'; // Sombra sutil

        overlay.appendChild(spinner);
        document.body.appendChild(overlay);
    }

    function esconderTelaCarregamento() {
        // Esconder a tela de carregamento gradativamente
        var overlay = document.getElementById('carregamento-overlay');
        if (overlay) {
            overlay.style.transition = 'opacity 0.5s ease-in-out';
            overlay.style.opacity = '0';

            setTimeout(function () {
                overlay.remove();
            }, 500); // Tempo de 0,5 segundo para a transição
        }
    }

    function mostrarMensagemConcluida() {
    // Criar a mensagem concluída
    var mensagem = document.createElement('div');
    mensagem.id = 'mensagem-concluida';
    mensagem.innerHTML = 'Todas as rotas abertas foram encerradas com sucesso!';
    mensagem.style.position = 'fixed';
    mensagem.style.top = '50%';
    mensagem.style.left = '50%';
    mensagem.style.transform = 'translate(-50%, -50%)';
    mensagem.style.background = '#2F2F2F'; // Cor de fundo do botão principal
    mensagem.style.color = '#FFFFFF'; // Cor do texto
    mensagem.style.padding = '20px';
    mensagem.style.borderRadius = '5px';
    mensagem.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
    mensagem.style.zIndex = '99999'; // Ajuste o z-index para garantir que fique acima de tudo
    mensagem.style.opacity = '0';
    mensagem.style.transition = 'opacity 0.5s ease-in-out'; // Adicionar transição para a animação

    document.body.appendChild(mensagem);

        // Efeito de fade-in
        setTimeout(function () {
            mensagem.style.opacity = '1';
        }, 100);

        // Efeito de fade-out após 1.5 segundos
        setTimeout(function () {
            mensagem.style.opacity = '0';
        }, 1500);

        // Remover a mensagem após o fade-out
        setTimeout(function () {
            mensagem.remove();
        }, 2000); // Tempo total da mensagem (fade-in + visível + fade-out)
    }

    // Iniciar a automação automaticamente ao carregar a página
    fecharTodasRotas();

    // Adicionar estilo do novo ícone de spinner do FontAwesome
    var estiloFontAwesome = document.createElement('link');
    estiloFontAwesome.rel = 'stylesheet';
    estiloFontAwesome.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css'; // Adicione o link do FontAwesome
    document.head.appendChild(estiloFontAwesome);

})();
    // Coloque aqui o código para o botão "Fechar Rotas"
  }

  function aplicarFiltros() {
      (function () {
    'use strict';

    // Código para o efeito de tela de carregamento
    function mostrarTelaCarregamento() {
        var loadingOverlay = document.createElement('div');
        loadingOverlay.id = 'carregamento-overlay';
        loadingOverlay.style.position = 'fixed';
        loadingOverlay.style.top = '0';
        loadingOverlay.style.left = '0';
        loadingOverlay.style.width = '100%';
        loadingOverlay.style.height = '100%';
        loadingOverlay.style.background = 'rgba(0, 0, 0, 0.5)';
        loadingOverlay.style.display = 'flex';
        loadingOverlay.style.alignItems = 'center';
        loadingOverlay.style.justifyContent = 'center';
        loadingOverlay.style.zIndex = '99999';

        var spinner = document.createElement('i');
        spinner.className = 'fas fa-spinner fa-spin';
        spinner.style.fontSize = '40px';
        spinner.style.color = '#fff';
        spinner.style.textShadow = '1px 1px 5px rgba(0, 0, 0, 0.3)';

        loadingOverlay.appendChild(spinner);
        document.body.appendChild(loadingOverlay);
    }

    function esconderTelaCarregamento() {
        var loadingOverlay = document.getElementById('carregamento-overlay');
        if (loadingOverlay) {
            loadingOverlay.style.transition = 'opacity 0.5s ease-in-out';
            loadingOverlay.style.opacity = '0';

            setTimeout(function () {
                loadingOverlay.remove();
            }, 500);
        }
    }

    // Código para a mensagem final
    function mostrarMensagemConcluida() {
    var mensagemFinal = document.createElement('div');
    mensagemFinal.id = 'mensagem-concluida';
    mensagemFinal.innerHTML = 'O filtro solicitado foi aplicado corretamente!';
    mensagemFinal.style.position = 'fixed';
    mensagemFinal.style.top = '50%';
    mensagemFinal.style.left = '50%';
    mensagemFinal.style.transform = 'translate(-50%, -50%)';
    mensagemFinal.style.background = '#2F2F2F'; // Cor de fundo do botão principal
    mensagemFinal.style.color = '#FFFFFF'; // Cor do texto
    mensagemFinal.style.padding = '20px';
    mensagemFinal.style.borderRadius = '5px';
    mensagemFinal.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
    mensagemFinal.style.zIndex = '99999';
    mensagemFinal.style.opacity = '0';
    mensagemFinal.style.transition = 'opacity 0.5s ease-in-out';

    document.body.appendChild(mensagemFinal);

        // Efeito de fade-in
        setTimeout(function () {
            mensagemFinal.style.opacity = '1';
        }, 100);

        // Efeito de fade-out após 1.5 segundos
        setTimeout(function () {
            mensagemFinal.style.opacity = '0';
        }, 1500);

        // Remover a mensagem após o fade-out
        setTimeout(function () {
            mensagemFinal.remove();
        }, 2000);
    }

    // Seu código existente...
    var carregando = false;
    var pararBotao;
    var pararBotaoVisible = true; // Controla a visibilidade do botão "Parar"

    // Adicionando a regra CSS para a animação
    var style = document.createElement('style');
    style.innerHTML = `
        @keyframes spin {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

        @keyframes fadeInOut {
            0% {
                opacity: 0;
            }
            50% {
                opacity: 1;
            }
            100% {
                opacity: 0;
            }
        }

        #carregamento-spinner {
            animation: spin 1s linear infinite; /* Ajuste a duração da animação conforme necessário */
        }

        .mensagem-final {
            animation: fadeInOut 2s ease-in-out; /* Ajuste a duração da animação conforme necessário */
        }
    `;
    document.head.appendChild(style);

    function simularHover(elemento) {
        var eventoMouseOver = new MouseEvent('mouseover', {
            bubbles: true,
            cancelable: true
        });

        elemento.dispatchEvent(eventoMouseOver);
    }

    function criarBotao(texto, position, bottom, right, margin, clickHandler) {
        var botao = document.createElement('button');
        botao.innerHTML = texto;
        botao.style.position = position || 'fixed';
        botao.style.bottom = bottom || '22px'; // Ajuste a posição conforme necessário
        botao.style.right = right || '70px'; // Ajuste a posição conforme necessário
        botao.style.backgroundColor = carregando ? '#ff0000' : '#2C4373'; // Cor vermelha quando ativo
        botao.style.color = '#ffffff';
        botao.style.border = 'none';
        botao.style.padding = '10px';
        botao.style.borderRadius = '5px';
        botao.style.cursor = 'pointer';
        botao.style.zIndex = '9999';
        botao.style.boxShadow = '0px 0px 5px rgba(0, 0, 0, 0.3)';
        botao.style.width = '50px'; // Ajuste para acomodar o novo texto
        botao.style.margin = margin || 'auto'; // Adicionando margem conforme necessário
        botao.addEventListener('click', clickHandler);
        return botao;
    }

    // Restante do código...

    if (carregando) return;

    carregando = true;
    mostrarTelaCarregamento();

    var acoes = [
        // ... (seu código existente)
        { id: 'viagensdodiagc1z1-triggerEl', tipo: 'click' },
        { id: 'menuitem-1155-arrowEl', tipo: 'hover' },
        { id: 'menucheckitem-1115-arrowEl', tipo: 'hover' },
        { id: 'menucheckitem-1130-textEl', tipo: 'hover' },
        { id: 'menucheckitem-1148-textEl', tipo: 'hover' },
        { id: 'menucheckitem-1104-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1107-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1108-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1110-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1111-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1112-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1113-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1114-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1129-textEl', tipo: 'click' },
        { id: 'menucheckitem-1132-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1133-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1134-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1136-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1139-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1140-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1141-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1142-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1143-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1144-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1145-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1146-checkEl', tipo: 'click' },
        { id: 'menucheckitem-1147-checkEl', tipo: 'click' },
        // Passos adicionais
        { id: 'viagensdodiaac8az1-triggerEl', tipo: 'click' },
        { id: 'menuitem-1158-textEl', tipo: 'click' }
    ];

    var index = 0;

    function realizarProximaAcao() {
        if (index < acoes.length && carregando) {
            var acao = acoes[index];
            var elemento = document.getElementById(acao.id);

            if (acao.tipo === 'click') {
                elemento.click();
            } else if (acao.tipo === 'hover') {
                simularHover(elemento);
            }

            // Remove o tempo de espera entre as ações de clique
            var tempoEspera = acao.tipo === 'click' ? 0 : 200;

            setTimeout(function () {
                index++;
                realizarProximaAcao();
            }, tempoEspera);
        } else {
            // Todas as ações foram concluídas
            esconderTelaCarregamento();
            if (carregando) {
                mostrarMensagemConcluida();
            }
            carregando = false;
            if (pararBotaoVisible && pararBotao) {
                document.body.removeChild(pararBotao); // Remover o botão "Parar" se visível
                pararBotaoVisible = false;
            }
        }
    }

    realizarProximaAcao();

    // Adicionar estilo do novo ícone de spinner do FontAwesome
    var estiloFontAwesome = document.createElement('link');
    estiloFontAwesome.rel = 'stylesheet';
    estiloFontAwesome.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css'; // Adicione o link do FontAwesome
    document.head.appendChild(estiloFontAwesome);

})();
    // Coloque aqui o código para o botão "Aplicar filtros"
    // Exemplo: console.log("Clicou em Aplicar Filtros");
  }

  function limparNotificacoes() {
      (function () {
    'use strict';

    // Código para o efeito de tela de carregamento
    function mostrarTelaCarregamento() {
        var overlay = document.createElement('div');
        overlay.id = 'carregamento-overlay';
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.background = 'rgba(0, 0, 0, 0.5)';
        overlay.style.display = 'flex';
        overlay.style.alignItems = 'center';
        overlay.style.justifyContent = 'center';
        overlay.style.zIndex = '99999';

        var spinner = document.createElement('i');
        spinner.className = 'fas fa-spinner fa-spin';
        spinner.style.fontSize = '40px';
        spinner.style.color = '#fff';
        spinner.style.textShadow = '1px 1px 5px rgba(0, 0, 0, 0.3)';

        overlay.appendChild(spinner);
        document.body.appendChild(overlay);
    }

    function esconderTelaCarregamento() {
        var overlay = document.getElementById('carregamento-overlay');
        if (overlay) {
            overlay.style.transition = 'opacity 0.5s ease-in-out';
            overlay.style.opacity = '0';

            setTimeout(function () {
                overlay.remove();
            }, 500);
        }
    }

    // Código para a mensagem final
    function mostrarMensagemConcluida() {
    var mensagem = document.createElement('div');
    mensagem.id = 'mensagem-concluida';
    mensagem.innerHTML = 'As notificações pendentes foram limpas!';
    mensagem.style.position = 'fixed';
    mensagem.style.top = '50%';
    mensagem.style.left = '50%';
    mensagem.style.transform = 'translate(-50%, -50%)';
    mensagem.style.background = '#2F2F2F'; // Cor de fundo do botão principal
    mensagem.style.color = '#FFFFFF'; // Cor do texto
    mensagem.style.padding = '20px';
    mensagem.style.borderRadius = '5px';
    mensagem.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
    mensagem.style.zIndex = '99999';
    mensagem.style.opacity = '0';
    mensagem.style.transition = 'opacity 0.5s ease-in-out';

    document.body.appendChild(mensagem);

        // Efeito de fade-in
        setTimeout(function () {
            mensagem.style.opacity = '1';
        }, 100);

        // Efeito de fade-out após 1.5 segundos
        setTimeout(function () {
            mensagem.style.opacity = '0';
        }, 1500);

        // Remover a mensagem após o fade-out
        setTimeout(function () {
            mensagem.remove();
        }, 2000);
    }

    // Adicionar estilo do novo ícone de spinner do FontAwesome
    var estiloFontAwesome = document.createElement('link');
    estiloFontAwesome.rel = 'stylesheet';
    estiloFontAwesome.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css'; // Adicione o link do FontAwesome
    document.head.appendChild(estiloFontAwesome);

    // Adicionar estilo de animação spin
    var estiloSpin = document.createElement('style');
    estiloSpin.innerHTML = `
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    `;
    document.head.appendChild(estiloSpin);

    // Adicionar estilo de animação slide-out
    var estiloSlideOut = document.createElement('style');
    estiloSlideOut.innerHTML = `
        @keyframes slideOut {
            0% {
                opacity: 1;
                transform: translateY(0);
            }
            100% {
                opacity: 0;
                transform: translateY(-50px); /* Ajuste a distância que deseja que a notificação percorra ao sair */
            }
        }
    `;
    document.head.appendChild(estiloSlideOut);

    // Seu código existente...
    function limparTodasNotificacoes() {
        var notificacoes = document.querySelectorAll('[id^="xnotif_"]');
        notificacoes.forEach(function (elementoNotificacao) {
            elementoNotificacao.style.animation = 'slideOut 0.5s ease-in-out';
            setTimeout(function () {
                elementoNotificacao.remove();
            }, 500);
        });
    }

    function automacaoAoCarregarPagina() {
        mostrarTelaCarregamento();
        setTimeout(function () {
            limparTodasNotificacoes();
            esconderTelaCarregamento();
            mostrarMensagemConcluida();
        }, 500); // Tempo simulado de limpeza de notificações
    }

    automacaoAoCarregarPagina();
})();
    // Coloque aqui o código para o botão "Limpar Notificações"
    // Exemplo: console.log("Clicou em Realizar Limpar Notificações");
  }

  function realizarTroca() {
      (function() {
    'use strict';

    // Função para realizar a troca automaticamente
    function realizarTrocaAutomatica() {
        mostrarTelaCarregamento();

        // Clique no primeiro botão
        setTimeout(function() {
            document.getElementById('button-1092-btnIconEl').click();
        }, 100);

        // Clique no segundo botão
        setTimeout(function() {
            document.getElementById('button-1014-btnInnerEl').click();
        }, 200);

        // Clique no terceiro botão
        setTimeout(function() {
            document.getElementById('button-1091-btnIconEl').click();
        }, 400);

        // Clique novamente no terceiro botão após 500ms
        setTimeout(function() {
            document.getElementById('button-1091-btnIconEl').click();
        }, 900);

        // Clique novamente no terceiro botão após mais 500ms
        setTimeout(function() {
            document.getElementById('button-1091-btnIconEl').click();
        }, 1400);

        // Mostrar "Troca realizada!" no meio da tela após as animações
        setTimeout(function() {
            esconderTelaCarregamento();
            mostrarMensagemTrocaRealizada();
        }, 1900);
    }

    // Função para mostrar a mensagem de troca realizada
    function mostrarMensagemTrocaRealizada() {
    var mensagem = document.createElement('div');
    mensagem.id = 'mensagem-troca-realizada';
    mensagem.innerHTML = 'A alocação foi alterada, por favor, verifique se o veículo é o correto!';
    mensagem.style.position = 'fixed';
    mensagem.style.top = '50%';
    mensagem.style.left = '50%';
    mensagem.style.transform = 'translate(-50%, -50%)';
    mensagem.style.background = '#2F2F2F'; // Cor de fundo do botão principal
    mensagem.style.color = '#FFFFFF'; // Cor do texto
    mensagem.style.padding = '20px';
    mensagem.style.borderRadius = '5px';
    mensagem.style.boxShadow = '0px 0px 10px rgba(0, 0, 0, 0.5)';
    mensagem.style.zIndex = '99999';
    mensagem.style.opacity = '0';
    mensagem.style.transition = 'opacity 0.5s ease-in-out';

    document.body.appendChild(mensagem);

        // Efeito de fade-in
        setTimeout(function () {
            mensagem.style.opacity = '1';
        }, 100);

        // Efeito de fade-out após 1.5 segundos
        setTimeout(function () {
            mensagem.style.opacity = '0';
        }, 1500);

        // Remover a mensagem após o fade-out
        setTimeout(function () {
            mensagem.remove();
        }, 2000);
    }

    // Adicionar estilo do novo ícone de spinner do FontAwesome
    var estiloFontAwesome = document.createElement('link');
    estiloFontAwesome.rel = 'stylesheet';
    estiloFontAwesome.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css'; // Adicione o link do FontAwesome
    document.head.appendChild(estiloFontAwesome);

    // Adicionar estilo de animação spin
    var estiloSpin = document.createElement('style');
    estiloSpin.innerHTML = `
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    `;
    document.head.appendChild(estiloSpin);

    // Adicionar estilo de animação slide-out
    var estiloSlideOut = document.createElement('style');
    estiloSlideOut.innerHTML = `
        @keyframes slideOut {
            0% {
                opacity: 1;
                transform: translateY(0);
            }
            100% {
                opacity: 0;
                transform: translateY(-50px);
            }
        }
    `;
    document.head.appendChild(estiloSlideOut);

    // Função para mostrar a tela de carregamento
    function mostrarTelaCarregamento() {
        var overlay = document.createElement('div');
        overlay.id = 'carregamento-overlay';
        overlay.style.position = 'fixed';
        overlay.style.top = '0';
        overlay.style.left = '0';
        overlay.style.width = '100%';
        overlay.style.height = '100%';
        overlay.style.background = 'rgba(0, 0, 0, 0.5)';
        overlay.style.display = 'flex';
        overlay.style.alignItems = 'center';
        overlay.style.justifyContent = 'center';
        overlay.style.zIndex = '99999';

        var spinner = document.createElement('i');
        spinner.className = 'fas fa-spinner fa-spin';
        spinner.style.fontSize = '40px';
        spinner.style.color = '#fff';
        spinner.style.textShadow = '1px 1px 5px rgba(0, 0, 0, 0.3)';

        overlay.appendChild(spinner);
        document.body.appendChild(overlay);
    }

    // Função para esconder a tela de carregamento
    function esconderTelaCarregamento() {
        var overlay = document.getElementById('carregamento-overlay');
        if (overlay) {
            overlay.style.transition = 'opacity 0.5s ease-in-out';
            overlay.style.opacity = '0';

            setTimeout(function () {
                overlay.remove();
            }, 500);
        }
    }

    // Remover o botão "Trocar"
    var botaoTrocar = document.getElementById('seu-id-de-botao'); // Substitua 'seu-id-de-botao' pelo ID correto
    if (botaoTrocar) {
        botaoTrocar.remove();
    }

    // Iniciar a troca automaticamente assim que a página for carregada
    realizarTrocaAutomatica();
})();
    // Coloque aqui o código para o botão "Trocar"
    // Exemplo: console.log("Clicou em Trocar");
  }

  function importarescala() {
      function trocarNumeroCarroPorRota(rotas, indiceAtual) {
    var listaRotas = rotas.split(/\n|,/);

    if (indiceAtual < listaRotas.length) {
        var nomeRota = listaRotas[indiceAtual].trim();
        var novoNumero = listaRotas[indiceAtual + 1].trim();

        var celulasRotas = document.querySelectorAll('.x-grid-cell-inner');

        for (let j = 0; j < celulasRotas.length; j++) {
            if (celulasRotas[j].innerText.trim() === nomeRota) {
                celulasRotas[j].style.backgroundColor = 'green';

                let linhaRota = celulasRotas[j].closest('.x-grid-row');
                if (linhaRota) {
                    let carroCell = linhaRota.querySelector('.x-grid-cell.x-grid-td.x-grid-cell-viagensdodiagc2.x-unselectable');
                    if (carroCell) {
                        simularCliqueDuplo(carroCell);

                        setTimeout(function () {
                            var listaCarros = document.querySelectorAll('.x-boundlist-list-ct .x-boundlist-item');

                            if (listaCarros.length > 0) {
                                for (var k = 0; k < listaCarros.length; k++) {
                                    if (listaCarros[k].textContent.trim() === novoNumero) {
                                        listaCarros[k].click();
                                        trocarNumeroCarroPorRota(rotas, indiceAtual + 2);
                                        return;
                                    }
                                }
                                console.error(`Carro ${novoNumero} não encontrado na lista.`);
                            }
                        }, 0);
                    } else {
                        console.error('Não foi possível encontrar a célula do carro.');
                    }
                }
            }
        }

        console.error(`Rota ${nomeRota} não encontrada.`);
    }
}

function simularCliqueDuplo(elemento) {
    var evt = new Event('dblclick', {
        bubbles: true,
        cancelable: true
    });

    elemento.dispatchEvent(evt);
}

function criarModal() {
    var modalContainer = document.createElement('div');
    modalContainer.id = 'trocarCarroModal';
    modalContainer.style.display = 'block';
    modalContainer.style.position = 'fixed';
    modalContainer.style.top = '50%';
    modalContainer.style.left = '50%';
    modalContainer.style.transform = 'translate(-50%, -50%)';
    modalContainer.style.background = 'rgba(44, 62, 80, 0.85)';
    modalContainer.style.padding = '20px';
    modalContainer.style.borderRadius = '10px';
    modalContainer.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.3)';
    modalContainer.style.zIndex = '9999';
    modalContainer.style.transition = 'background 0.3s';

    var botoesSuperioresContainer = document.createElement('div');
    botoesSuperioresContainer.style.display = 'flex';
    botoesSuperioresContainer.style.justifyContent = 'space-between';

    var botaoImportar = document.createElement('button');
    botaoImportar.innerHTML = 'Importar';
    botaoImportar.style.width = '48%';
    botaoImportar.style.padding = '10px';
    botaoImportar.style.background = 'rgba(51, 51, 51, 0.8)';
    botaoImportar.style.color = '#FFFFFF';
    botaoImportar.style.border = 'none';
    botaoImportar.style.borderRadius = '5px';
    botaoImportar.style.cursor = 'pointer';
    botaoImportar.style.transition = 'background 0.3s';

    botaoImportar.addEventListener('mouseover', function () {
        botaoImportar.style.background = 'rgba(74, 102, 164, 0.8)';
    });

    botaoImportar.addEventListener('mouseout', function () {
        botaoImportar.style.background = 'rgba(51, 51, 51, 0.8)';
    });

    var inputArquivo = document.createElement('input');
    inputArquivo.type = 'file';
    inputArquivo.accept = '.xls, .xlsx';
    inputArquivo.style.display = 'none';

    inputArquivo.addEventListener('change', function (e) {
        var file = e.target.files[0];
        if (file) {
            var leitor = new FileReader();
            leitor.onload = function (e) {
                var workbook = XLSX.read(e.target.result, { type: 'binary' });
                var primeiraPlanilha = workbook.SheetNames[0];
                var dados = XLSX.utils.sheet_to_json(workbook.Sheets[primeiraPlanilha], { header: 1 });
                var dadosFormatados = dados.map(function (linha) {
                    return linha.join(',');
                }).join('\n');

                caixaTextoRotas.value = dadosFormatados;
            };
            leitor.readAsBinaryString(file);
        }
    });

    botaoImportar.addEventListener('click', function () {
        inputArquivo.click();
    });

    botoesSuperioresContainer.appendChild(botaoImportar);

    var botao = document.createElement('button');
    botao.innerHTML = 'Trocar';
    botao.style.width = '48%';
    botao.style.padding = '10px';
    botao.style.background = 'rgba(51, 51, 51, 0.8)';
    botao.style.color = '#FFFFFF';
    botao.style.border = 'none';
    botao.style.borderRadius = '5px';
    botao.style.cursor = 'pointer';
    botao.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.3)';
    botao.style.transition = 'background 0.3s';

    botao.addEventListener('mouseover', function () {
        botao.style.background = 'rgba(74, 102, 164, 0.8)';
    });

    botao.addEventListener('mouseout', function () {
        botao.style.background = 'rgba(51, 51, 51, 0.8)';
    });

    botao.addEventListener('click', function () {
        var rotas = caixaTextoRotas.value.trim();
        if (rotas !== '') {
            trocarNumeroCarroPorRota(rotas, 0);
        }
    });

    botoesSuperioresContainer.appendChild(botao);

    modalContainer.appendChild(botoesSuperioresContainer);

    var caixaTextoRotas = document.createElement('textarea');
    caixaTextoRotas.placeholder = 'Insira suas rotas aqui (ex: ROTA_TURNO_I,1001) | Local de Visualização do Arquivo Importado.';
    caixaTextoRotas.style.width = '100%';
    caixaTextoRotas.style.height = '150px';
    caixaTextoRotas.style.marginBottom = '0px';
    caixaTextoRotas.readOnly = true;
    caixaTextoRotas.style.background = '#FFFFFF';
    caixaTextoRotas.style.color = '#000000';
    caixaTextoRotas.style.resize = 'none';
    caixaTextoRotas.style.marginTop = '10px';

    var fecharModal = document.createElement('button');
    fecharModal.innerHTML = 'Fechar';
    fecharModal.style.width = '100%';
    fecharModal.style.padding = '10px';
    fecharModal.style.background = '#f44336';
    fecharModal.style.color = 'white';
    fecharModal.style.border = 'none';
    fecharModal.style.borderRadius = '5px';
    fecharModal.style.cursor = 'pointer';
    fecharModal.style.marginTop = '10px';
    fecharModal.style.transition = 'background 0.3s';

    fecharModal.addEventListener('mouseover', function () {
        fecharModal.style.background = '#d32f2f';
    });

    fecharModal.addEventListener('mouseout', function () {
        fecharModal.style.background = '#f44336';
    });

    fecharModal.addEventListener('click', function () {
        modalContainer.style.display = 'none';
    });

    modalContainer.appendChild(caixaTextoRotas);
    modalContainer.appendChild(fecharModal);

    document.body.appendChild(modalContainer);
}

if (document.readyState === 'complete' || document.readyState === 'interactive') {
    criarModal();
} else {
    window.addEventListener('DOMContentLoaded', function () {
        criarModal();
    });
}
    // Coloque aqui o código para o botão "Importar"
  }
})();
